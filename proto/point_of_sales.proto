/************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                     *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program.	If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.grpc.util";
option java_outer_classname = "ADempierePOS";
option objc_class_prefix = "HLW";

import "proto/core_functionality.proto";
import "proto/base_data_type.proto";

// TODO: Change package name from 'data' to 'pos' or 'point_of_sales'
package data;

//	POS Service used for ADempiere integration
service Store {
	//	Get POS Definition
	rpc GetPointOfSales(PointOfSalesRequest) returns (PointOfSales) {}
	//	List Point of Sales
	rpc ListPointOfSales(ListPointOfSalesRequest) returns (ListPointOfSalesResponse) {}
	//	Get Product Price from Code / UPC / Name
	rpc GetProductPrice(GetProductPriceRequest) returns (ProductPrice) {}
	//	List Product Price
	rpc ListProductPrice(ListProductPriceRequest) returns (ListProductPriceResponse) {}
	//	Create Order
	rpc CreateOrder(CreateOrderRequest) returns (Order) {}
	//	Delete Order
	rpc DeleteOrder(DeleteOrderRequest) returns (Empty) {}
	//	Create Order Line
	rpc CreateOrderLine(CreateOrderLineRequest) returns (OrderLine) {}
	//	Delete Order Line
	rpc DeleteOrderLine(DeleteOrderLineRequest) returns (Empty) {}
	//	Update Order Line
	rpc UpdateOrderLine(UpdateOrderLineRequest) returns (OrderLine) {}
	//	Get a Order
	rpc GetOrder(GetOrderRequest) returns (Order) {}
	//	List Orders
	rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {}
}

//	List POS Response
message ListPointOfSalesResponse {
	int64 recordCount = 1;
	repeated PointOfSales sellingPoints = 2;
	string next_page_token = 3;
}

//	List Product Price Response
message ListProductPriceResponse {
	int64 recordCount = 1;
	repeated ProductPrice productPrices = 2;
	string next_page_token = 3;
}

//	List Orders Response
message ListOrdersResponse {
	int64 recordCount = 1;
	repeated Order orders = 2;
	string next_page_token = 3;
}

// List Orders Request
message ListOrdersRequest {
	ClientRequest clientRequest = 1;
	string posUuid = 2;
	int32 page_size = 3;
	string page_token = 4;
}

// List Product Price Request
message ListProductPriceRequest {
	ClientRequest clientRequest = 1;
	string searchValue = 2;
	string priceListUuid = 3;
	string businessPartnerUuid = 4;
	string warehouseUuid = 5;
	int64 validFrom = 6;
	int32 page_size = 7;
	string page_token = 8;
}

// POS from user uuid
message ListPointOfSalesRequest {
	ClientRequest clientRequest = 1;
	string userUuid = 2;
	int32 page_size = 3;
	string page_token = 4;
}

// Point of Sales request
message PointOfSalesRequest {
	ClientRequest clientRequest = 1;
	string pointOfSalesUuid = 2;
}

// Point of Sales definition
message PointOfSales {
	string uuid = 1;
	int32 id = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	bool isModifyPrice = 6;
	bool isPOSRequiredPIN = 7;
	SalesRepresentative salesRepresentative = 8;
	BusinessPartner templateBusinessPartner = 9;
	string priceListUuid = 10;
	Currency currency = 11;
}

// Request for create a order
message CreateOrderRequest {
	ClientRequest clientRequest = 1;
	string posUuid = 2;
	string customerUuid = 3;
	string documentTypeUuid = 4;
}

// Request for delete a order
message DeleteOrderRequest {
	ClientRequest clientRequest = 1;
	string orderUuid = 2;
}

// Request for delete a order
message DeleteOrderLineRequest {
	ClientRequest clientRequest = 1;
	string orderLineUuid = 2;
}

// Request for create a order line
message CreateOrderLineRequest {
	ClientRequest clientRequest = 1;
	string orderUuid = 2;
	string productUuid = 3;
	string chargeUuid = 4;
	string description = 5;
	Decimal quantity = 6;
	Decimal price = 7;
	Decimal discountRate = 8;
	string warehouseUuid = 9;
}

// Request for update a order line
message UpdateOrderLineRequest {
	ClientRequest clientRequest = 1;
	string orderLineUuid = 2;
	string description = 5;
	Decimal quantity = 6;
	Decimal price = 7;
	Decimal discountRate = 8;
}

// Request for get a order
message GetOrderRequest {
	ClientRequest clientRequest = 1;
	string orderUuid = 2;
}

// Sales Order
message Order {
	string uuid = 1;
	int32 id = 2;
	string documentNo = 3;
	DocumentType documentType = 4;
	SalesRepresentative salesRepresentative = 5;
	DocumentStatus documentStatus = 6;
	Decimal totalLines = 7;
	Decimal grandTotal = 8;
	int64 dateOrdered = 9;
}

// Sales Order Line
message OrderLine {
	string uuid = 1;
	string orderUuid = 2;
	Product product = 3;
	Charge charge = 4;
	string lineDescription = 5;
	string description = 6;
	Warehouse warehouse = 7;
	Decimal quantity = 8;
	Decimal price = 9;
	Decimal discountRate = 10;
	TaxRate taxRate = 11;
	Decimal lineNetAmount = 12;
	int32 line = 13;
}

// Request Product Price
message GetProductPriceRequest {
	ClientRequest clientRequest = 1;
	string searchValue = 2;
	string upc = 3;
	string value = 4;
	string name = 5;
	string priceListUuid = 6;
	string businessPartnerUuid = 7;
	string warehouseUuid = 8;
	int64 validFrom = 9;
}
